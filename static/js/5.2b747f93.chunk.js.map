{"version":3,"sources":["redux/contacts/contacts-selectors.js","Components/PhonebookForm/PhonebookForm.jsx","redux/contacts/contacts-operations.js","Components/ContactList/ContactListItem.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","Views/ContactsView.js"],"names":["getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","createSelector","contact","name","toLowerCase","includes","toLocaleLowerCase","useStyles","createUseStyles","form","display","flexDirection","marginLeft","marginRight","padding","width","border","borderRadius","boxShadow","label","marginBottom","justifyContent","color","button","backgroundColor","outline","cursor","PhonebookForm","useState","number","setNumber","setName","dispatch","useDispatch","useSelector","validateForm","filterContact","find","alert","handleUniq","s","className","onSubmit","e","preventDefault","fetchAddContactRequest","axios","post","then","data","fetchAddContactSuccess","catch","error","fetchAddContactError","message","addContact","input","type","value","onChange","target","listItem","alignItems","fontWeight","ContactItem","onClick","id","a","fetchDeleteContactRequest","delete","fetchDeleteContactSuccess","fetchDeleteContactError","list","margin","ContactList","useEffect","fetchContactsRequest","get","fetchContactsSuccess","fetchContactsError","map","ContactListItem","marginTop","Filter","changeFilter","ContactsView"],"mappings":"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","file":"static/js/5.2b747f93.chunk.js","sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\r\nexport const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) =>\r\n    contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLocaleLowerCase()),\r\n    ),\r\n);\r\n","import { useState } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\r\nimport { addContact } from '../../redux/contacts/contacts-operations';\r\n\r\nconst useStyles = createUseStyles({\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    padding: 25,\r\n    width: '250px',\r\n    border: '1px solid black ',\r\n    borderRadius: 4,\r\n    boxShadow: '1px 1px 0px 0px black',\r\n  },\r\n  label: {\r\n    display: 'flex',\r\n    marginBottom: 10,\r\n    justifyContent: 'space-between',\r\n    '&:hover': {\r\n      color: 'orange',\r\n    },\r\n  },\r\n  button: {\r\n    backgroundColor: '#fff',\r\n    border: '1px solid black ',\r\n    boxShadow: '2px 2px 0px 0px black',\r\n    borderRadius: 3,\r\n    outline: 'none',\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      border: '1px solid orange ',\r\n      boxShadow: '2px 2px 0px 0px orange',\r\n      color: 'orange',\r\n    },\r\n  },\r\n});\r\n\r\nconst PhonebookForm = () => {\r\n  const [number, setNumber] = useState('');\r\n  const [name, setName] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getContacts);\r\n\r\n  const handleNameChange = e => {\r\n    setName(e.target.value);\r\n  };\r\n  const handleNumberChange = e => {\r\n    setNumber(e.target.value);\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const isValidated = validateForm();\r\n    if (!isValidated) return;\r\n    dispatch(addContact({ name, number }));\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const handleUniq = ({ name }) => {\r\n    const filterContact = !!contacts.find(contact => contact.name === name);\r\n    filterContact && alert(`Contact is already in the Phonebook`);\r\n    return !filterContact;\r\n  };\r\n  const validateForm = () => {\r\n    if (!name || !number) {\r\n      alert('Please Ðµnter data!');\r\n      setName('');\r\n      setNumber('');\r\n      return false;\r\n    }\r\n\r\n    return handleUniq(name);\r\n  };\r\n\r\n  const s = useStyles();\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={handleNameChange}\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          value={number}\r\n          onChange={handleNumberChange}\r\n        />\r\n      </label>\r\n      <button className={s.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PhonebookForm;\r\n","import axios from 'axios';\r\n\r\nimport {\r\n  fetchAddContactError,\r\n  fetchAddContactSuccess,\r\n  fetchAddContactRequest,\r\n  fetchContactsRequest,\r\n  fetchContactsError,\r\n  fetchContactsSuccess,\r\n  fetchDeleteContactRequest,\r\n  fetchDeleteContactSuccess,\r\n  fetchDeleteContactError,\r\n} from './contacts-actions';\r\n\r\nexport const fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n  axios\r\n    .get(`/contacts`)\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(fetchContactsError(error.message)));\r\n};\r\n\r\nexport const addContact = (name, number) => dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n  dispatch(fetchAddContactRequest());\r\n  axios\r\n    .post(`/contacts`, contact)\r\n    .then(({ data }) => dispatch(fetchAddContactSuccess(data)))\r\n    .catch(error => dispatch(fetchAddContactError(error.message)));\r\n};\r\n\r\nexport const deleteContact = id => async dispatch => {\r\n  dispatch(fetchDeleteContactRequest());\r\n  try {\r\n    await axios.delete(`/contacts/${id}`);\r\n    dispatch(fetchDeleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(fetchDeleteContactError(error.message));\r\n  }\r\n};\r\n","import { createUseStyles } from 'react-jss';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteContact } from '../../redux/contacts/contacts-operations';\r\n\r\nconst useStyles = createUseStyles({\r\n  listItem: {\r\n    width: 300,\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: 10,\r\n  },\r\n  name: {\r\n    marginRight: 'auto',\r\n  },\r\n  number: {\r\n    fontWeight: '500',\r\n    marginRight: 'auto',\r\n  },\r\n  button: {\r\n    backgroundColor: '#fff',\r\n    boxShadow: '1px 1px 0px 0px black',\r\n    border: 'none',\r\n    borderRadius: 3,\r\n    outline: 'none',\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      boxShadow: '1px 1px 0px 0px orange',\r\n      color: 'orange',\r\n    },\r\n  },\r\n});\r\nconst ContactItem = ({ contact }) => {\r\n  const s = useStyles();\r\n  const dispatch = useDispatch();\r\n  const handleDelete = () => dispatch(deleteContact(contact.id));\r\n  return (\r\n    <li className={s.listItem}>\r\n      <p className={s.name}>{contact.name}</p>\r\n      <p className={s.number}>{contact.number}</p>\r\n      <button className={s.button} onClick={handleDelete}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactItem;\r\n","import { createUseStyles } from 'react-jss';\r\n\r\nimport ContactListItem from './ContactListItem';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\r\nimport { useEffect } from 'react';\r\nimport { fetchContacts } from '../../redux/contacts/contacts-operations';\r\n\r\nconst useStyles = createUseStyles({\r\n  list: {\r\n    padding: 0,\r\n    margin: 0,\r\n  },\r\n});\r\nconst ContactList = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const s = useStyles();\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(contact => (\r\n        <ContactListItem key={contact.id} contact={contact} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import { createUseStyles } from 'react-jss';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\r\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\r\n\r\nconst useStyles = createUseStyles({\r\n  label: {\r\n    width: 300,\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    '&:hover': {\r\n      color: 'orange',\r\n    },\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    marginTop: 10,\r\n  },\r\n});\r\nconst Filter = () => {\r\n  const s = useStyles();\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector(getFilter);\r\n\r\n  const handleFilterChange = e => {\r\n    dispatch(changeFilter(e.target.value));\r\n  };\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={handleFilterChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import PhonebookForm from '../Components/PhonebookForm';\r\nimport ContactList from '../Components/ContactList';\r\nimport Filter from '../Components/Filter';\r\n\r\nconst ContactsView = () => {\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <PhonebookForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactsView;\r\n"],"sourceRoot":""}