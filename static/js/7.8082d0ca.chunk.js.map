{"version":3,"sources":["Views/LoginView.js"],"names":["useStyles","makeStyles","theme","root","display","justifyContent","height","paper","margin","spacing","flexDirection","alignItems","avatar","backgroundColor","form","width","marginTop","submit","color","padding","border","borderRadius","boxShadow","cursor","LoginView","s","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","name","value","container","component","className","md","onSubmit","e","preventDefault","login","noValidate","variant","required","fullWidth","id","label","autoComplete","autoFocus","onChange","activeClass","activeLabel","type"],"mappings":"iTAYMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,QAAS,OACTC,eAAgB,SAChBC,OAAQ,SAEVC,MAAO,CACLC,OAAQN,EAAMO,QAAQ,EAAG,GACzBL,QAAS,OACTM,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNJ,OAAQN,EAAMO,QAAQ,GACtBI,gBAAiB,UAEnBC,KAAM,CACJC,MAAO,OACPC,UAAWd,EAAMO,QAAQ,IAE3BQ,OAAQ,CACNC,MAAO,QACPV,OAAQN,EAAMO,QAAQ,EAAG,EAAG,GAC5BU,QAAS,WACTN,gBAAiB,OACjBO,OAAQ,OACRC,aAAc,EACdC,UAAW,wBACXC,OAAQ,UACR,UAAW,CACTL,MAAO,OACPL,gBAAiB,eAKR,SAASW,IACtB,IAAMC,EAAIzB,IACJ0B,EAAWC,cAFiB,EAGRC,mBAAS,IAHD,mBAG3BC,EAH2B,KAGpBC,EAHoB,OAIFF,mBAAS,IAJP,mBAI3BG,EAJ2B,KAIjBC,EAJiB,KAM5BC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACH,OAAOL,EAASM,GAClB,IAAK,WACH,OAAOJ,EAAYI,GACrB,QACE,SAWN,OACE,eAAC,IAAD,CAAMC,WAAS,EAACC,UAAU,OAAOC,UAAWd,EAAEtB,KAA9C,UACE,cAAC,IAAD,IAEA,cAAC,IAAD,CAAMqC,GAAI,EAAV,SACE,sBAAKD,UAAWd,EAAElB,MAAlB,UACE,cAAC,IAAD,CAAQgC,UAAWd,EAAEb,OAArB,SACE,cAAC,IAAD,MAGF,uBAAM2B,UAAWd,EAAEX,KAAM2B,SAjBZ,SAAAC,GACnBA,EAAEC,iBACFjB,EAASkB,YAAM,CAAEf,QAAOE,cACxBD,EAAS,IACTE,EAAY,KAa2Ca,YAAU,EAA3D,UACE,cAAC,IAAD,CACEC,QAAQ,WACRtC,OAAO,SACPuC,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,QACNf,KAAK,QACLgB,aAAa,QACbC,WAAS,EACThB,MAAOP,EACPwB,SAAUpB,EACVM,UAAWd,EAAEyB,MACbI,YAAa7B,EAAE8B,cAEjB,cAAC,IAAD,CACET,QAAQ,WACRtC,OAAO,SACPuC,UAAQ,EACRC,WAAS,EACTb,KAAK,WACLe,MAAM,WACNM,KAAK,WACLP,GAAG,WACHE,aAAa,mBACbf,MAAOL,EACPsB,SAAUpB,IAEZ,cAAC,IAAD,CACEuB,KAAK,SACLR,WAAS,EACTF,QAAQ,YACR5B,MAAM,UACNqB,UAAWd,EAAER,OALf","file":"static/js/7.8082d0ca.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../redux/user/user-operations';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    height: '100vh',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: 'tomato',\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    color: 'black',\r\n    margin: theme.spacing(3, 0, 2),\r\n    padding: '5px 40px',\r\n    backgroundColor: '#fff',\r\n    border: 'none',\r\n    borderRadius: 5,\r\n    boxShadow: '0px 0px 3px 0px black',\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      color: '#fff',\r\n      backgroundColor: 'tomato',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function LoginView() {\r\n  const s = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(login({ email, password }));\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={s.root}>\r\n      <CssBaseline />\r\n\r\n      <Grid md={5}>\r\n        <div className={s.paper}>\r\n          <Avatar className={s.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n\r\n          <form className={s.form} onSubmit={handleSubmit} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              value={email}\r\n              onChange={handleChange}\r\n              className={s.label}\r\n              activeClass={s.activeLabel}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={password}\r\n              onChange={handleChange}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={s.submit}\r\n            >\r\n              Sign in\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n"],"sourceRoot":""}